ASM
---
- Near and Far in procedures how are they used exactly?
- Is it a good idea to push every register modified by a procedure. Maybe there are more efficient alternatives? In particular do I really need to push ax?
- Figure out how to add debug information to the build.
- How does the LEA opcode works exactly?
- Do I need to create a stack segment for a com file? Will DOS put the SP at a lower address if there is not enough memory? How does DOS make sure in general there is enough memory to run the game?
- Is masm only accepting 8086 instructions? Maybe I can send a flag during assembly just in case?

IBM PC
------
- How do I check before setting the video mode that the desire mode is supported?
- When I call a BIOS or DOS interrupt what registers can I expect to be saved?
- Color 3 in Palette 0 can be brown or yellow, apparently. What decides that exactly?
- Make sure I understand which version of DOS is required to run the game.
- See if I can find proper documentation on how vsync works.
- Seems like the keypress has to be read before quitting, otherwise it will show up in the DOS prompt.

LINKS
-----
https://www.pcjs.org/machines/pcx86/ibm/5160/cga/ (web emulator)
https://stanislavs.org/helppc/int_table.html (interrupts)
http://www.delorie.com/djgpp/doc/rbinter/ (interrupts)
https://www.phatcode.net/articles.php
http://qzx.com/pc-gpe/